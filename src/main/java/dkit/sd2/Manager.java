package dkit.sd2;

/* INHERITANCE Demonstration
    Manager extends Employee
   - means that the Manager class INHERITS FROM the Employee class.
   - Employee is known as the Super-Class, and Manager as the Sub-Class.
   - Manager inherits all the instance variable and methods
     from its superclass (Employee), and adds some of its own.

     A Manager is a "type-of" Employee.
 */

public class Manager extends Employee      // Manager inherits from Employee
{
                            // Manager object will inherit all Employee fields and methods,
    private double bonus;   // and adds one additional field called 'bonus'

    public Manager(String name, double hours, double rate, double bonus)
    {
        super(name, hours, rate);   // calls the constructor of the superclass (Employee)
                                    // to let it initialize the Employee fields.
        this.bonus = bonus;
    }

    public Manager()       // the 'no-argument' construct
    {
        super();                // calls the no-arg constructor of the superclass (Employee)
        this.bonus = 0;
    }

    public double getBonus()
    {
        return bonus;
    }

    public void setBonus(double bonus)
    {
        this.bonus = bonus;
    }

    // override (replace) the getSalary() method defined in Employee parent class
    @Override
    public double getSalary()
    {
        // call the getSalary() method from the SUPERclass, i.e. Employee
        // and add the manager's bonus.
        return super.getSalary() + this.bonus;
    }

    // Default version of toString() as Generated by IntelliJ
//    @Override
//    public String toString()
//    {
//        return "Manager{" +
//                "bonus=" + bonus +
//                '}';
//    }

//  The following toString() version is more useful as it returns the fields defined
//  in Employee and the field defined in Manager.

//    @Override
//    public String toString()
//    {
//        return "Manager{" + "bonus=" + bonus + "{" + super.toString() + "}}";
//    }

}
